---
name: "utils-mac"
distro: "debian"
suites:
- "wheezy"
architectures:
- "i386"
- "amd64"
packages:
- "faketime"
- "automake"
- "libtool"
- "zip"
reference_datetime: "2000-01-01 00:00:00"
remotes:
- "url": "https://github.com/libevent/libevent.git"
  "dir": "libevent"
- "url": "https://github.com/wolfcw/libfaketime"
  "dir": "faketime"
- "url": "https://github.com/llvm-mirror/llvm"
  "dir": "llvm"
- "url": "https://github.com/llvm-mirror/clang"
  "dir": "clang"
- "url": "https://cmake.org/cmake.git"
  "dir": "cmake"
files:
- "apple-uni-sdk-10.6_20110407-0.flosoft1_i386.deb"
- "multiarch-darwin11-cctools127.2-gcc42-5666.3-llvmgcc42-2336.1-Linux-120724.tar.xz"
- "openssl.tar.gz"
- "gmp.tar.bz2"
- "versions"
- "dzip.sh"
- "libfaketime.patch"
script: |
  INSTDIR="$HOME/install"
  source versions
  export TZ=UTC
  export LC_ALL=C
  umask 0022

  # Cmake first
  cd cmake
  ./bootstrap --prefix=$INSTDIR/cmake
  make $MAKEOPTS
  make install
  export PATH=$PATH:$INSTDIR/cmake/bin
  # Clang
  cd ../llvm
  mv ../clang tools/
  export LLVM_HOME=`pwd`
  mkdir build
  cd build
  cmake .. -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTDIR/clang -DCMAKE_BUILD_TYPE:STRING=Release $LLVM_HOME
  make $MAKEOPTS
  make install
  cd $INSTDIR
  ~/build/dzip.sh clang-$CLANG_VER-linux$GBUILD_BITS-wheezy-utils.zip clang
  cp *utils.zip $OUTDIR/

  cd $HOME/build
  if [ $GBUILD_BITS == "32" ];
  then
    # Building libfaketime.
    cd faketime
    export GIT_COMMITTER_NAME="nobody"
    export GIT_COMMITTER_EMAIL="nobody@localhost"
    export GIT_COMMITTER_DATE="$REFERENCE_DATETIME"
    git am ~/build/libfaketime.patch
    make
    DESTDIR="$INSTDIR/faketime" make install
    export FAKETIME_SKIP_CMDS="make"
    export FAKETIME=$REFERENCE_DATETIME
    cd ..

    # dpkg requires sbin directories in the PATH
    export PATH="/usr/sbin:/sbin:$PATH"
    sudo dpkg -i *.deb
    tar xaf multiarch-darwin*tar.xz
    export PATH="$PATH:$HOME/build/apple-osx/bin/"
    # For OpenSSL
    ln -s ~/build/apple-osx/bin/apple-osx-gcc ~/build/apple-osx/bin/i686-apple-darwin11-cc
    #For gmp, need to trick it so it knows we're doing a 64 bit build
    for i in ~/build/apple-osx/bin/i686-apple-darwin11-*; do j=`echo $i | sed 's/i686/x86_64/'`; ln -s $i $j; done;

    # XXX Clean up these flags?
    export CFLAGS="-m64 -I/usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/include/ -I/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/ -I.  -L/usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/lib/ -L/usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/lib/system/ -mmacosx-version-min=10.5"
    export CXXFLAGS="-m64 -I/usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/include/ -I/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/ -I.  -L/usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/lib/ -L/usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/lib/system/ -L/usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/lib/i686-apple-darwin10/4.2.1 -mmacosx-version-min=10.5"
    export LDFLAGS="-L/usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/lib/ -L/usr/lib/apple/SDKs/MacOSX10.6.sdk/usr/lib/system/ -mmacosx-version-min=10.5"

    # Building Libevent
    cd libevent
    ./autogen.sh
    find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
    ./configure --disable-static --host=i686-apple-darwin11 --prefix=$INSTDIR/libevent
    export LD_PRELOAD="$INSTDIR/faketime/usr/local/lib/faketime/libfaketime.so.1"
    make $MAKEOPTS
    make install
    cd ..

    # Building OpenSSL
    tar xzf openssl.tar.gz
    cd openssl-*
    find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
    # TODO: Add enable-ec_nistp_64_gcc_128 for 64bit OS X.
    ./Configure --cross-compile-prefix=i686-apple-darwin11- $CFLAGS darwin64-x86_64-cc --prefix=$INSTDIR/openssl enable-ec_nistp_64_gcc_128
    # Using $MAKEOPTS breaks the build. Might be the issue mentioned on
    # http://cblfs.cross-lfs.org/index.php/OpenSSL.
    make
    make install
    cd ..

    # Building GMP
    tar xjf gmp.tar.bz2
    cd gmp-*
    # |configure| can't cope with nano seconds faked. And even if we would revert
    # that feature it would hang sometimes for unknown but to libfaketime related
    # reasons.
    export LD_PRELOAD=""
    find -type f -print0 | xargs -0 touch --date="$REFERENCE_DATETIME"
    # Even if we are not shipping libgmpxx anymore we still need --enable-xcc
    # during compile time.
    ./configure --host=x86_64-apple-darwin11 --prefix=$INSTDIR/gmp --disable-static --enable-shared --enable-cxx
    export LD_PRELOAD="$INSTDIR/faketime/usr/local/lib/faketime/libfaketime.so.1"
    make
    make install
    cd ..

    # Grabbing the results
    cd $INSTDIR
    ~/build/dzip.sh openssl-$OPENSSL_VER-mac64-utils.zip openssl
    ~/build/dzip.sh libevent-${LIBEVENT_TAG#release-}-mac64-utils.zip libevent
    ~/build/dzip.sh gmp-$GMP_VER-mac64-utils.zip gmp

    cp *utils.zip $OUTDIR/
  fi
